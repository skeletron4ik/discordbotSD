import disnake
from disnake.ext import commands
import random
from pymongo import MongoClient, errors, collection
from main import cluster
from datetime import datetime, timedelta
from ai.process_role import process_role
import asyncio

last_spin_times = {}

collusers = cluster.server.users
collservers = cluster.server.servers


def check_value(inter):
    result = collusers.update_one(
        {"id": inter.author.id, "guild_id": inter.guild.id, "tries": {"$exists": False}},
        {"$set": {"tries": 0}}  # –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—è age
    )


def format_duration(value):
    if value == 1:
        return "1 —Ä—É–º–±–∏–∫"
    elif 2 <= value <= 4:
        return f"`{value}` —Ä—É–º–±–∏–∫–∞"
    else:
        return f"`{value}` —Ä—É–º–±–∏–∫–æ–≤"


def create_error_embed(message: str) -> disnake.Embed:
    embed = disnake.Embed(color=0xff0000, timestamp=datetime.now())
    embed.add_field(name='–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', value=f'–û—à–∏–±–∫–∞: {message}')
    embed.set_thumbnail(url="https://cdn.pixabay.com/animation/2022/12/26/19/45/19-45-56-484__480.png")
    embed.set_footer(text='–û—à–∏–±–∫–∞')
    return embed


emoji = "<a:rumbick_gif:1276856664842047518>"


class RouletteCog(commands.Cog):

    def __init__(self, bot):
        self.bot = bot
        self.allowed_channel_id = 1279413707981455422

    @commands.slash_command(
        name="roulette",
        description="–ò–≥—Ä–∞ –≤ —Ä—É–ª–µ—Ç–∫—É"
    )
    async def roulette(self, inter):
        pass

    @roulette.sub_command(name='buy', description='–ö—É–ø–∏—Ç—å –∫—Ä—É—Ç–∫—É')
    async def buy(self, inter):

        check_value(inter)

        balance = collusers.find_one({'id': inter.author.id, 'guild_id': inter.author.guild.id})['balance']

        if balance < 49:
            nomoney = format_duration(49 - balance)
            embed = create_error_embed(f'–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç {nomoney}.')
            await inter.response.edit_original_response(embed=embed)
            return

        collusers.find_one_and_update({'id': inter.author.id, 'guild_id': inter.author.guild.id},
                                      {'$inc': {'balance': -49}})

        collusers.find_one_and_update({'id': inter.author.id, 'guild_id': inter.author.guild.id},
                                      {'$inc': {'tries': 1}})

        embed = disnake.Embed(
            description=f"**–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –∫—Ä—É—Ç–∫—É, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ –∫–æ–º–∞–Ω–¥–µ `/roulette start`.",
            colour=0x00ff00,
            timestamp=datetime.now()
        )
        embed.set_author(name="–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –∫—Ä—É—Ç–∫—É!",
                         icon_url="https://i.imgur.com/vlX2dxG.gif")
        embed.set_thumbnail(url="https://www.emojiall.com/images/240/telegram/2705.gif")
        embed.set_footer(text="–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
                         icon_url=inter.guild.icon.url)
        await inter.send(embed=embed, ephemeral=True)

    @roulette.sub_command(name='tries', description='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä—É—Ç–æ–∫')
    async def tries(self, inter: disnake.ApplicationCommandInteraction):

        check_value(inter)

        tries = collusers.find_one({'id': inter.author.id, 'guild_id': inter.author.guild.id})['tries']
        await inter.send(f'–í–∞—à–∏ –∫—Ä—É—Ç–∫–∏: {tries}')

    @roulette.sub_command(namee='start', description='–ü—Ä–æ–∫—Ä—É—Ç–∏—Ç—å —Ä—É–ª–µ—Ç–∫—É')
    async def start(self, inter: disnake.ApplicationCommandInteraction):

        check_value(inter)

        if collusers.find_one({'id': inter.author.id, 'guild_id': inter.author.guild.id})['tries'] <= 0:
            await inter.send('–£ –í–∞—Å –Ω–µ—Ç –ø–æ–ø—ã—Ç–æ–∫.')
            return

        roulette_options = [
            {'name': '–ú—É—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç üîá', 'chance': 5, 'field': 'mute', 'value': 10},
            {'name': f'20 üí∞', 'chance': 0, 'field': 'currency', 'value': 20},
            {'name': f'50 üí∞', 'chance': 0, 'field': 'currency', 'value': 50},
            {'name': 'Gold –Ω–∞ 1 –¥–µ–Ω—å ‚≠êÔ∏è', 'chance': 0, 'field': 'gold', 'value': 86400},
            {'name': 'Diamond –Ω–∞ 1 –¥–µ–Ω—å üíé', 'chance': 0, 'field': 'diamond', 'value': 86400},
            {'name': 'Gold –Ω–∞ 7 –¥–Ω–µ–π ‚≠êÔ∏è', 'chance': 0, 'field': 'gold', 'value': 604800},
            {'name': 'Diamond –Ω–∞ 7 –¥–Ω–µ–π üíé', 'chance': 0, 'field': 'diamond', 'value': 604800},
            {'name': f'100 üí∞', 'chance': 0, 'field': 'currency', 'value': 100},
            {'name': 'Gold –Ω–∞ 30 –¥–Ω–µ–π ‚≠êÔ∏è', 'chance': 0, 'field': 'gold', 'value': 2592000},
            {'name': 'Diamond –Ω–∞ 30 –¥–Ω–µ–π üíé', 'chance': 0, 'field': 'diamond', 'value': 2592000},
            {'name': f'500 üí∞', 'chance': 0, 'field': 'currency', 'value': 500},
            {'name': f'1000 üí∞', 'chance': 0, 'field': 'currency', 'value': 1000},
            {'name': 'Gold –Ω–∞–≤—Å–µ–≥–¥–∞ ‚≠êÔ∏è', 'chance': 95, 'field': 'gold', 'value': 2592000000},
        ]
        # –°–æ–∑–¥–∞—ë–º –≤–∑–≤–µ—à–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        weighted_items = []
        for option in roulette_options:
            weighted_items.extend([option] * option['chance'])

        # –ï—Å–ª–∏ —à–∞–Ω—Å—ã –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ä–∞–≤–Ω—ã 0, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º None
        if not weighted_items:
            return None

        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
        selected_option = random.choice(weighted_items)
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è
        prize = {
            "name": selected_option['name'],
            "field": selected_option['field'],
            "value": selected_option['value']
        }

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–∑–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ —Ç–∏–ø–∞
        if prize['field'] == 'currency':
            collusers.find_one_and_update(
                {'id': inter.author.id, 'guild_id': inter.author.guild.id},
                {'$inc': {'balance': prize['value']}}
            )
        elif prize['field'] == 'gold':
            await process_role(inter, self.bot, 0, prize['value'], 1303396950481174611, ephemeral=True)
        elif prize['field'] == 'diamond':
            await process_role(inter, self.bot, 0, prize['value'], 1044314368717897868, ephemeral=True)
        elif prize['field'] == 'mute':
            try:
                dur = timedelta(minutes=prize['value'])
                print('im here')
                await inter.author.timeout(duration=dur)
            except:
                pass

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        await inter.send(f'–í—ã–ø–∞–ª: {prize["name"]}')


def setup(bot):
    bot.add_cog(RouletteCog(bot))
    print('Roulette Cog is Ready!')
