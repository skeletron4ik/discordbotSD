import disnake
from pymongo import MongoClient, errors, collection
from disnake.ext import commands, tasks
from datetime import datetime, timedelta
import os
import asyncio
import time
import random
import math
import re
from main import cluster
from main import rules, get_rule_info, check_roles
from ai.promo import create_rumbicks
from ai.process_role import process_role

collusers = cluster.server.users
collservers = cluster.server.servers

cooldowns = {}
voice_timestamps = {}
mute_timestamps = {}
total_time = {}
emoji = "<a:rumbick:1271085088142262303>"

def format_duration(value):
    if value == 1:
        return "1 —Ä—É–º–±–∏–∫"
    elif 2 <= value <= 4:
        return f"`{value}` —Ä—É–º–±–∏–∫–∞"
    else:
        return f"`{value}` —Ä—É–º–±–∏–∫–æ–≤"
def format_rumbick(value):
    emoji = "<a:rumbick:1271085088142262303>"
    return f"{value}{emoji}"

def create_error_embed(message: str) -> disnake.Embed:
    embed = disnake.Embed(color=0xff0000, timestamp=datetime.now())
    embed.add_field(name='–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', value=f'–û—à–∏–±–∫–∞: {message}')
    embed.set_thumbnail(url="https://media2.giphy.com/media/AkGPEj9G5tfKO3QW0r/200.gif")
    embed.set_footer(text='–û—à–∏–±–∫–∞')
    return embed


def format_time(seconds):
    days, seconds = divmod(seconds, 86400)
    hours, seconds = divmod(seconds, 3600)
    minutes, seconds = divmod(seconds, 60)

    time_components = []
    if days > 0:
        time_components.append(f'{int(days)} –¥')
    if hours > 0:
        time_components.append(f'{int(hours)} —á')
    if minutes > 0:
        time_components.append(f'{int(minutes)} –º–∏–Ω')
    if seconds > 0 or not time_components:
        time_components.append(f'{int(seconds)} —Å–µ–∫')

    return ', '.join(time_components)

def format_duration(self, time_str):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —Å—Ç—Ä–æ–∫—É."""
    try:
        value = int(time_str[:-1])
    except ValueError:
        raise ValueError(f"Invalid time format: {time_str}")

    unit = time_str[-1]
    if unit == '–¥' or unit == 'd':
        return f"{value} –¥–Ω–µ–π"
    elif unit == '—á' or unit == 'h':
        return f"{value} —á–∞—Å–æ–≤"
    elif unit == '–º' or unit == 'm':
        return f"{value} –º–∏–Ω—É—Ç"
    elif unit == '—Å' or unit == 's':
        return f"{value} —Å–µ–∫—É–Ω–¥"
    else:
        raise ValueError(f"Invalid time unit: {time_str[-1]}")

class EconomyCog(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.check_booster.start()

    @commands.Cog.listener()
    async def on_message(self, message: disnake.Message):
        excluded_channels = {1070322967634006057, 532628352927006737, 944562833901899827, 1270673733178101801}

        if message.author.bot:
            if message.channel.id == 1070322967634006057 or message.channel.id == 1235294532409495555:
                if message.embeds:
                    message_embed = str(message.embeds[0].description)
                    author_interaction = None

                    if 'Bump done!' in message_embed or '–í—Ä–µ–º—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ –∞–ø–∞:' in message_embed or '–í–∏ —É—Å–ø—ñ—à–Ω–æ –ª–∞–π–∫–Ω—É–ª–∏ —Å–µ—Ä–≤–µ—Ä.' in message_embed or '–í—ã —É—Å–ø–µ—à–Ω–æ –ª–∞–π–∫–Ω—É–ª–∏ —Å–µ—Ä–≤–µ—Ä.' in message_embed or 'You successfully liked the server.' in message_embed or '–£—Å–ø–µ—à–Ω—ã–π Up!' in message_embed:
                        author_interaction = message.interaction.author

                    elif '–ó–∞–ø—É—â–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: `/up`' in message_embed:
                        author_interaction = message.author.guild.get_member_named(message.embeds[0].author.name)

                    elif 'Server bumped by' in message_embed:
                        mention_pattern = r"<@!?(\d+)>"
                        mentions = re.findall(mention_pattern, message_embed)
                        if mentions:
                            author_interaction = await message.author.guild.fetch_member(mentions[0])

                    if author_interaction:
                        multiplier = collservers.find_one({'_id': message.author.guild.id})['multiplier']
                        money_to_give = random.uniform(5, 10)
                        money_to_give1 = money_to_give * multiplier
                        money_to_give2 = round(money_to_give1, 2)

                        collusers.find_one_and_update({'id': author_interaction.id}, {'$inc': {'balance': money_to_give2, 'bumps': 1}})
                        collservers.update_one({"_id": message.guild.id}, {"$inc": {"bumps": 1, "total_rumbicks": money_to_give2}}, upsert=True)
                        embed = disnake.Embed(title='–£—Å–ø–µ—à–Ω—ã–π –±–∞–º–ø!', colour=0xffbb00, timestamp=datetime.now())
                        embed.set_thumbnail(url='https://cdn.pixabay.com/animation/2023/06/13/15/13/15-13-13-522_512.gif')
                        embed.add_field(name=f'',
                                        value=f'{author_interaction.mention}, –°–ø–∞—Å–∏–±–æ —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç–µ –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–µ—Ä—É —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ª—É—á—à–µ!\n'
                                              f'–í –∑–Ω–∞–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ `{money_to_give2}`{emoji}!')
                        base_chance = 5  # –ë–∞–∑–æ–≤—ã–π —à–∞–Ω—Å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
                        adjusted_chance = base_chance * multiplier  # –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —à–∞–Ω—Å
                        if random.randint(1, 100) <= adjusted_chance:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å
                            embed.add_field(name='', value='–í–∞–º —Ç–∞–∫ –∂–µ –≤—ã–ø–∞–ª `1üîë` –æ—Ç MysteryBox!', inline=False)
                            collusers.find_one_and_update({'id': author_interaction.id}, {'$inc': {'keys': 1}})
                        embed.set_author(name=f'{author_interaction.display_name}',
                                         icon_url=author_interaction.avatar.url)
                        embed.set_footer(text=message.author.guild.name, icon_url=message.author.guild.icon.url)
                        channel = self.bot.get_channel(1070322967634006057)
                        await channel.send(embed=embed)
        else:
            # Update message count
            if message.channel.id not in excluded_channels:
                collusers.find_one_and_update(
                    {'id': message.author.id, 'guild_id': message.guild.id},
                    {'$inc': {'message_count': 1}},
                    upsert=True
                )
                collservers.update_one(
                    {"_id": message.guild.id},
                    {"$inc": {"messages": 1}},
                    upsert=True
                )

            now = datetime.now()
            user_id = message.author.id
            if len(message.content) > 3:

                if user_id in cooldowns:
                    last_used = cooldowns[user_id]
                    if now - last_used < timedelta(seconds=15):
                        time_left = timedelta(seconds=15) - (now - last_used)
                        return

                multiplier = collservers.find_one({'_id': message.author.guild.id})['multiplier']
                money_to_give = random.uniform(0.5, 1)
                money_to_give1 = money_to_give * multiplier
                money_to_give2 = round(money_to_give1, 2)
                collusers.find_one_and_update({'id': message.author.id}, {'$inc': {'balance': money_to_give2}})
                collservers.update_one(
                    {"_id": message.author.guild.id},
                    {"$inc": {"chat_rumbicks": money_to_give2, "total_rumbicks": money_to_give2}},
                    upsert=True
                )
                cooldowns[user_id] = now

    @commands.slash_command(name='balance', description='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–∞–ª–∞–Ω—Å —É—á–∞—Å—Ç–Ω–∏–∫–∞',
                            aliases=['–±–∞–ª–∞–Ω—Å', '—Å—á–µ—Ç', '–æ—Å—Ç–∞—Ç–æ–∫', 'credit', 'amount', 'sum'], contexts=disnake.InteractionContextTypes(guild=True, bot_dm=False, private_channel=False))
    @commands.cooldown(rate=1, per=15, type=commands.BucketType.user)
    async def balance(self, inter: disnake.ApplicationCommandInteraction, —É—á–∞—Å—Ç–Ω–∏–∫: disnake.Member = None):
        await inter.response.defer(ephemeral=True)

        if —É—á–∞—Å—Ç–Ω–∏–∫ is None:
            —É—á–∞—Å—Ç–Ω–∏–∫ = inter.author

        user_data = collusers.find_one({"id": —É—á–∞—Å—Ç–Ω–∏–∫.id})
        if user_data:
            balance = round(user_data.get('balance', 0), 2)
            balance_formatted = format_rumbick(balance)

            embed = disnake.Embed(title=f'', color=0x00ff00)
            embed.set_author(name=f"{—É—á–∞—Å—Ç–Ω–∏–∫.display_name}", icon_url=—É—á–∞—Å—Ç–Ω–∏–∫.display_avatar.url)
            embed.set_thumbnail(
                url="https://64.media.tumblr.com/31756ec986051798604d9697fa0e7d99/tumblr_pxuqjiK9Hn1sftgzko1_400.gif")
            embed.add_field(name='–ë–∞–ª–∞–Ω—Å:', value=f'{balance_formatted}', inline=False)
            embed.set_footer(text=f'–ë–∞–ª–∞–Ω—Å', icon_url=inter.guild.icon.url)
            embed.timestamp = datetime.now()
            await inter.edit_original_response(embed=embed)
        else:
            await inter.edit_original_response(content="–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

    @commands.slash_command(name='pay', description='–ü–µ—Ä–µ–≤–æ–¥ —Ä—É–º–±–∏–∫–æ–≤ –¥—Ä—É–≥–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É',
                            aliases=['–ø–µ—Ä–µ–≤–æ–¥', 'give', 'transfer'], contexts=disnake.InteractionContextTypes(guild=True, bot_dm=False, private_channel=False))
    @commands.cooldown(rate=1, per=15, type=commands.BucketType.user)
    async def pay(self, inter: disnake.ApplicationCommandInteraction, —É—á–∞—Å—Ç–Ω–∏–∫: disnake.Member, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: int):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
        if –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ < 10:
            error_message = f"–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –º–µ–Ω—å—à–µ ``10`` {emoji}"
            embed = create_error_embed(error_message)
            await inter.response.send_message(embed=embed, ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ø—ã—Ç–∫—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å–∞–º–æ–º—É —Å–µ–±–µ
        if —É—á–∞—Å—Ç–Ω–∏–∫.id == inter.author.id:
            embed = disnake.Embed(color=0xff0000, timestamp=datetime.now())
            error_message = "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ä—É–º–±–∏–∫–∏ —Å–∞–º–æ–º—É —Å–µ–±–µ."
            embed = create_error_embed(error_message)
            await inter.response.send_message(embed=embed, ephemeral=True)
            return

        await inter.response.defer()

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–æ–ª–µ–π –Ω–∞ –∫–æ–º–∏—Å—Å–∏—é
        excluded_roles = {
            518505773022838797,  # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
            580790278697254913,  # –ì–ª. –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä
            702593498901381184,  # –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä
            1044314368717897868,  # Diamond
            757930494301044737,  # Server Booster
        }
        role_gold = 1303396950481174611  # Gold

        balance = collusers.find_one({"id": inter.author.id})['balance']

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ä–æ–ª–∏-–∏—Å–∫–ª—é—á–µ–Ω–∏—è —É –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        is_sender_excluded = any(role.id in excluded_roles for role in inter.author.roles)

        if balance >= –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:
            # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–∏ (–µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ –∏—Å–∫–ª—é—á–µ–Ω)
            if is_sender_excluded:
                amount_after_commission = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                commission_amount = 0
            elif role_gold in [role.id for role in inter.author.roles]:
                commission = 0.05  # 5% –∫–æ–º–∏—Å—Å–∏–∏
                human_commision = 5
                amount_after_commission = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ * (1 - commission)
                commission_amount = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ - amount_after_commission
            else:
                commission = 0.1  # 10% –∫–æ–º–∏—Å—Å–∏–∏
                human_commision = 10
                amount_after_commission = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ * (1 - commission)
                commission_amount = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ - amount_after_commission

            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
            collusers.find_one_and_update({'id': inter.author.id}, {"$inc": {"balance": -–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ}})
            collusers.find_one_and_update({'id': —É—á–∞—Å—Ç–Ω–∏–∫.id}, {"$inc": {"balance": amount_after_commission}})
            collusers.find_one_and_update({'id': —É—á–∞—Å—Ç–Ω–∏–∫.id}, {'$inc': {'number_of_deal': 1}})
            collusers.find_one_and_update({'id': inter.author.id}, {'$inc': {'number_of_deal': 1}})
            collservers.update_one({"_id": inter.guild.id}, {"$inc": {"deals": 1}}, upsert=True)
            collservers.update_one({"_id": inter.guild.id}, {"$inc": {"transfers": 1}}, upsert=True)

            formatted_amount = format_rumbick(round(–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, 2))
            formatted_amount_after_commission = format_rumbick(round(amount_after_commission, 2))
            formatted_commission_amount = format_rumbick(round(commission_amount, 2))

            embed = disnake.Embed(title=f'–°–¥–µ–ª–∫–∞ `{inter.author.display_name}` ‚áæ `{—É—á–∞—Å—Ç–Ω–∏–∫.display_name}`',
                                  color=0x00ff00)
            embed.set_author(name=f"{—É—á–∞—Å—Ç–Ω–∏–∫.display_name}", icon_url=—É—á–∞—Å—Ç–Ω–∏–∫.display_avatar.url)
            embed.set_thumbnail(
                url="https://64.media.tumblr.com/31756ec986051798604d9697fa0e7d99/tumblr_pxuqjiK9Hn1sftgzko1_400.gif")
            embed.add_field(name='–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å', value=f'{inter.author.mention}', inline=True)
            embed.add_field(name='–ü–æ–ª—É—á–∞—Ç–µ–ª—å:', value=f'{—É—á–∞—Å—Ç–Ω–∏–∫.mention}', inline=True)
            embed.add_field(name='–°—É–º–º–∞ —Å–¥–µ–ª–∫–∏:', value=f'{formatted_amount}', inline=True)

            if commission_amount > 0:
                embed.add_field(name='–ö–æ–º–∏—Å—Å–∏—è:', value=f'{human_commision}% ({formatted_commission_amount})', inline=True)
                embed.add_field(name='–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞:', value=f'{formatted_amount_after_commission}', inline=True)
            else:
                embed.add_field(name='–ö–æ–º–∏—Å—Å–∏—è:', value=f'0%', inline=True)

            embed.set_footer(text=f'–ü–æ–ª—É—á–∞—Ç–µ–ª—å: {—É—á–∞—Å—Ç–Ω–∏–∫.name}', icon_url=—É—á–∞—Å—Ç–Ω–∏–∫.avatar.url)
            embed.timestamp = datetime.now()
            await inter.edit_original_response(embed=embed)

        else:
            unformatted = int(–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ) - balance
            formatted = format_duration(unformatted)
            error_message = f"–£ –í–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –µ—â–µ {formatted} –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞."
            embed = create_error_embed(error_message)
            await inter.followup.send(embed=embed, ephemeral=True)

    @commands.slash_command(name="change", description="–ò–∑–º–µ–Ω—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ –ø–æ–ª–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞")
    @commands.cooldown(rate=1, per=15, type=commands.BucketType.user)
    @check_roles("admin")
    async def change(self, inter: disnake.ApplicationCommandInteraction, —É—á–∞—Å—Ç–Ω–∏–∫: disnake.Member,
                     –ø–æ–ª–µ: str = commands.Param(
                         choices=[
                             "balance",
                             "keys",
                             "reputation",
                             "message_count",
                             "time_in_voice",
                             "reaction_count",
                             "number_of_deal",
                             "number_of_roles",
                             "bumps",
                             "opened_cases",
                             "promocodes",
                         ]
                     ),
                     –¥–µ–π—Å—Ç–≤–∏–µ: str = commands.Param(choices=["–¥–æ–±–∞–≤–∏—Ç—å (+)", "–æ—Ç–Ω—è—Ç—å (-)", "—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å (=)"]),
                     –∑–Ω–∞—á–µ–Ω–∏–µ: str = None,
                     ):
        def format_duration(time_str):
            """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —Å—Ç—Ä–æ–∫—É."""
            try:
                value = int(time_str[:-1])
            except ValueError:
                raise ValueError(f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏: {time_str}")

            unit = time_str[-1]
            if unit in ['–¥', 'd']:
                return value * 86400  # –¥–Ω–µ–π –≤ —Å–µ–∫—É–Ω–¥—ã
            elif unit in ['—á', 'h']:
                return value * 3600  # —á–∞—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—ã
            elif unit in ['–º', 'm']:
                return value * 60  # –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥—ã
            elif unit in ['—Å', 's']:
                return value  # —Å–µ–∫—É–Ω–¥—ã
            else:
                raise ValueError(f"–ù–µ–≤–µ—Ä–Ω–∞—è –µ–¥–∏–Ω–∏—Ü–∞ –≤—Ä–µ–º–µ–Ω–∏: {unit}")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        user_data = collusers.find_one({"id": —É—á–∞—Å—Ç–Ω–∏–∫.id})
        if not user_data:
            await inter.response.send_message(
                f"–£—á–∞—Å—Ç–Ω–∏–∫ {—É—á–∞—Å—Ç–Ω–∏–∫.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.", ephemeral=True
            )
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
        if –ø–æ–ª–µ != "balance":
            if –ø–æ–ª–µ == "time_in_voice":
                try:
                    –∑–Ω–∞—á–µ–Ω–∏–µ = format_duration(–∑–Ω–∞—á–µ–Ω–∏–µ)
                except ValueError as e:
                    await inter.response.send_message(str(e), ephemeral=True)
                    return
            else:
                if not –∑–Ω–∞—á–µ–Ω–∏–µ.isdigit():
                    await inter.response.send_message(
                        f"–î–ª—è –ø–æ–ª—è {–ø–æ–ª–µ} –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.", ephemeral=True
                    )
                    return
                –∑–Ω–∞—á–µ–Ω–∏–µ = int(–∑–Ω–∞—á–µ–Ω–∏–µ)
        else:
            try:
                –∑–Ω–∞—á–µ–Ω–∏–µ = float(–∑–Ω–∞—á–µ–Ω–∏–µ)
            except ValueError:
                await inter.response.send_message(
                    "–î–ª—è –ø–æ–ª—è balance –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ.", ephemeral=True
                )
                return

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—è
        current_value = user_data.get(–ø–æ–ª–µ, 0.0)
        new_value = current_value

        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–µ–π—Å—Ç–≤–∏—è
        if –¥–µ–π—Å—Ç–≤–∏–µ == "–¥–æ–±–∞–≤–∏—Ç—å (+)":
            new_value += –∑–Ω–∞—á–µ–Ω–∏–µ
            collusers.find_one_and_update({"id": —É—á–∞—Å—Ç–Ω–∏–∫.id}, {"$inc": {–ø–æ–ª–µ: –∑–Ω–∞—á–µ–Ω–∏–µ}})
            action_text = f"**–¥–æ–±–∞–≤–∏–ª–∏** ``{–∑–Ω–∞—á–µ–Ω–∏–µ}``"
        elif –¥–µ–π—Å—Ç–≤–∏–µ == "–æ—Ç–Ω—è—Ç—å (-)":
            new_value -= –∑–Ω–∞—á–µ–Ω–∏–µ
            collusers.find_one_and_update({"id": —É—á–∞—Å—Ç–Ω–∏–∫.id}, {"$inc": {–ø–æ–ª–µ: -–∑–Ω–∞—á–µ–Ω–∏–µ}})
            action_text = f"**–æ—Ç–Ω—è–ª–∏** ``{–∑–Ω–∞—á–µ–Ω–∏–µ}``"
        elif –¥–µ–π—Å—Ç–≤–∏–µ == "—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å (=)":
            new_value = –∑–Ω–∞—á–µ–Ω–∏–µ
            collusers.find_one_and_update({"id": —É—á–∞—Å—Ç–Ω–∏–∫.id}, {"$set": {–ø–æ–ª–µ: –∑–Ω–∞—á–µ–Ω–∏–µ}})
            action_text = f"**—É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏** –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ ``{–∑–Ω–∞—á–µ–Ω–∏–µ}``"

        # –°–æ–∑–¥–∞–Ω–∏–µ Embed –¥–ª—è –æ—Ç–≤–µ—Ç–∞
        embed = disnake.Embed(color=0x00FF00)
        embed.set_author(name=inter.user.display_name, icon_url=inter.user.display_avatar.url)
        embed.set_thumbnail(url="https://www.emojiall.com/images/240/telegram/2705.gif")
        embed.add_field(name="",
                        value=f"–í—ã {action_text} –¥–ª—è –ø–æ–ª—è **{–ø–æ–ª–µ}** —É {—É—á–∞—Å—Ç–Ω–∏–∫.mention}. –¢–µ–ø–µ—Ä—å –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ: {new_value}",
                        inline=False)
        embed.set_footer(text=f"–ü–æ–ª–µ {–ø–æ–ª–µ} —É—á–∞—Å—Ç–Ω–∏–∫–∞ {—É—á–∞—Å—Ç–Ω–∏–∫.display_name} –∏–∑–º–µ–Ω–µ–Ω–æ",
                         icon_url=—É—á–∞—Å—Ç–Ω–∏–∫.display_avatar.url)
        embed.timestamp = datetime.now()
        await inter.response.send_message(embed=embed, ephemeral=True)

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        log_channel = await self.bot.fetch_channel(944562833901899827)
        log_embed = disnake.Embed(color=0x00FF00)
        log_embed.set_author(name="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª—è", icon_url=inter.user.display_avatar.url)
        log_embed.add_field(name="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:", value=inter.user.mention, inline=True)
        log_embed.add_field(name="–£—á–∞—Å—Ç–Ω–∏–∫:", value=—É—á–∞—Å—Ç–Ω–∏–∫.mention, inline=True)
        log_embed.add_field(name="–ü–æ–ª–µ:", value=–ø–æ–ª–µ, inline=True)
        log_embed.add_field(name="–î–µ–π—Å—Ç–≤–∏–µ:", value=–¥–µ–π—Å—Ç–≤–∏–µ, inline=True)
        log_embed.add_field(name="–ó–Ω–∞—á–µ–Ω–∏–µ:", value=f"{–∑–Ω–∞—á–µ–Ω–∏–µ}", inline=True)
        log_embed.add_field(name="–°—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:", value=f"{current_value}", inline=True)
        log_embed.add_field(name="–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:", value=f"{new_value}", inline=True)
        log_embed.set_footer(text=f"ID –£—á–∞—Å—Ç–Ω–∏–∫–∞: {—É—á–∞—Å—Ç–Ω–∏–∫.id}")
        log_embed.set_thumbnail(url="https://www.emojiall.com/images/240/telegram/2705.gif")
        log_embed.timestamp = datetime.now()
        await log_channel.send(embed=log_embed)

    @commands.slash_command(name='store', description='–ú–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∑–∞ –†—É–º–±–∏–∫–∏',
                            aliases=['shop', '–º–∞–≥–∞–∑–∏–Ω', '–ª–∞–≤–∫–∞', '—Ä—ã–Ω–æ–∫'], contexts=disnake.InteractionContextTypes(guild=True, bot_dm=False, private_channel=False))
    @commands.cooldown(rate=1, per=15, type=commands.BucketType.user)
    async def store(self, inter: disnake.ApplicationCommandInteraction):
        if inter.type == disnake.InteractionType.application_command:
            try:
                await inter.response.defer(ephemeral=True)
            except:
                return
        diamond = inter.guild.get_role(1044314368717897868)
        gold = inter.guild.get_role(1303396950481174611)
        user_data = collusers.find_one({"id": inter.author.id})
        if user_data:
            balance = round(user_data.get('balance', 0), 2)
            balance_formatted = format_rumbick(balance)
        else:
            balance_formatted = '0'
        embed = disnake.Embed(title='', color=0x4169E1)
        embed.set_author(name='–ú–∞–≥–∞–∑–∏–Ω —Å–µ—Ä–≤–µ—Ä–∞', icon_url=inter.guild.icon.url)
        embed.set_thumbnail(url='https://i.gifer.com/origin/63/6309237109affef229b14c3c5dc7308b_w200.gif')
        embed.add_field(name='–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —Ü–µ–Ω –æ —Ç–æ–≤–∞—Ä–µ, –≤—ã–±–µ—Ä–µ—Ç–µ –µ–≥–æ –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤!', value=f'', inline=False)
        embed.add_field(name=f'**1. üíé Diamond**',
                        value=f'–î–∞—ë—Ç —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ (–≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–æ–ª–∏ ‚≠êÔ∏è Gold –∏ –±–æ–ª—å—à–µ). –ü–æ–¥—Ä–æ–±–Ω–µ–µ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ç–æ–≤–∞—Ä–∞.\n**–¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏:** ``499``{emoji} | ``899``{emoji} | ``1199``{emoji}\n **–°–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ:** –†–æ–ª—å - {diamond.mention}',
                        inline=False)
        embed.add_field(name=f'**2. ‚≠êÔ∏è Gold**',
                        value=f'–î–∞—ë—Ç —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏. –ü–æ–¥—Ä–æ–±–Ω–µ–µ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ç–æ–≤–∞—Ä–∞.\n**–¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏:** ``249``{emoji} | ``449``{emoji} | ``599``{emoji}\n **–°–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ:** –†–æ–ª—å - {gold.mention}',
                        inline=False)
        embed.add_field(name=f'**3. üôã‚Äç‚ôÇÔ∏è –°–º–µ–Ω–∞ –Ω–∏–∫–Ω–µ–π–º–∞**',
                        value=f'–î–∞—ë—Ç –µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π –Ω–∏–∫–Ω–µ–π–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.\n**–¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏:** ``49``{emoji}\n**–°–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ:** –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–º–µ–Ω—ã __–æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ__ –Ω–∏–∫–Ω–µ–π–º–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.',
                        inline=False)
        embed.add_field(name=f'**4. üöÄ –ì–ª–æ–±–∞–ª—å–Ω—ã–π –±—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤ x2**',
                        value=f'–í–¥–≤–æ–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∑–∞—Ä–æ–±–æ—Ç–æ–∫ —Å –∞–∫—Ç–∏–≤–Ω–∏—Å—Ç–∏ –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —á–∞—Ç–∞—Ö.\n**–¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏:** ``199``{emoji} | ``499``{emoji} | ``999``{emoji}\n**–°–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ:** –ì–ª–æ–±–∞–ª—å–Ω—ã–π –±—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤ x2.',
                        inline=False)
        embed.add_field(name=f'**5. üîë –ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∫–ª—é—á**',
                        value=f'–ü–æ–∫—Ä—ã—Ç—ã–π –∑–∞–≥–∞–¥–æ—á–Ω—ã–º–∏ —Ä—É–Ω–∞–º–∏, —ç—Ç–æ—Ç –∫–ª—é—á –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —è—â–∏–∫ —Å —Ä–µ–¥–∫–∏–º–∏ —Å–æ–∫—Ä–æ–≤–∏—â–∞–º–∏. –ì–æ—Ç–æ–≤ –ª–∏ —Ç—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ –≤–Ω—É—Ç—Ä–∏?\n**–¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏:** –æ—Ç ``49``{emoji} –∑–∞ —à—Ç—É–∫—É'
                              f'\n**–°–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ:** –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç—å **–∑–∞–≥–∞–¥–æ—á–Ω—ã–π —è—â–∏–∫** —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã ``/mystery-box open``. –ö—Ç–æ –∑–Ω–∞–µ—Ç, —á—Ç–æ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏?',
                        inline=False)
        embed.add_field(name='', value='')
        embed.add_field(name='', value=f'**–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:** {balance_formatted}', inline=False)


        options = [
            disnake.SelectOption(label=f"üíé Diamond", description="–î–∞—ë—Ç —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏", value="1"),
            disnake.SelectOption(label=f"‚≠êÔ∏è Gold", description="–î–∞—ë—Ç —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏", value="2"),
            disnake.SelectOption(label="üôã‚Äç‚ôÇÔ∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º",
                                 description="–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–¥–∏–Ω —Ä–∞–∑ —Å–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º",
                                 value="3"),
            disnake.SelectOption(label="üöÄ –ì–ª–æ–±–∞–ª—å–Ω—ã–π –±—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤ x2",
                                 description="–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∑–∞—Ä–æ–±–æ—Ç–æ–∫ –†—É–º–±–∏–∫–æ–≤ –≤–¥–≤–æ–µ", value="4"),
            disnake.SelectOption(label=f"üîë –ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∫–ª—é—á", description="–î–∞—ë—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç—å –∑–∞–≥–∞–¥–æ—á–Ω—ã–π —è—â–∏–∫", value="5")
        ]

        # –°–æ–∑–¥–∞–µ–º select menu
        select_menu = disnake.ui.Select(
            placeholder="–í—ã–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏...",
            min_values=1,
            max_values=1,
            options=options,
        )

        async def select_callback(interaction: disnake.MessageInteraction):
            global embed1
            if select_menu.values[0] == "1":
                embed1 = disnake.Embed(color=0x4169E1)
                embed1.set_author(name=f'–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å {diamond.name}', icon_url=inter.guild.icon.url)
                embed1.set_thumbnail(url='https://i.gifer.com/origin/63/6309237109affef229b14c3c5dc7308b_w200.gif')
                embed1.add_field(name='',
                                 value=f'{diamond.mention} - –†–æ–ª—å-–ø—Ä–∏–≤–∏–ª–µ–≥–∏—è, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–∞–º—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏ –ø—Ä–µ–¥–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –° —ç—Ç–æ–π —Ä–æ–ª—å—é –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å–µ—Ä–≤–µ—Ä–∞.',
                                 inline=False)
                embed1.add_field(
                    name="**–ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏:**",
                    value=(
                         "```"
                        "‚úÖ üë§ –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
                        "‚úÖ ‚≠êÔ∏è –£–Ω–∏–∫–∞–ª—å–Ω–∞—è –∏–∫–æ–Ω–∫–∞ –≤–æ–∑–ª–µ –Ω–∏–∫–∞\n"
                        "‚úÖ üîí –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ VIP-–∫–∞–Ω–∞–ª—É\n"
                        "‚úÖ üìú –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –ñ—É—Ä–Ω–∞–ª—É –∞—É–¥–∏—Ç–∞\n"
                        "‚úÖ ‚úèÔ∏è –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞\n"
                        "‚úÖ üõ°Ô∏è –ü–æ–ª–Ω–æ–µ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–æ–¥–µ—Ä–∞—Ü–∏–∏\n"
                        "‚úÖ ‚è±Ô∏è –£–±—Ä–∞–Ω –∫—É–ª–¥–∞—É–Ω –º–µ–∂–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥\n"
                        "‚úÖ üìÜ –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ —Å—Ä–æ–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –Ω–∞ 10 –¥–Ω–µ–π –ø—Ä–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö\n"
                        "‚úÖ üí∏ –ù—É–ª–µ–≤–∞—è –∫–æ–º–∏—Å—Å–∏—è –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ –†—É–º–±–∏–∫–æ–≤\n"
                        "‚úÖ üè∑Ô∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–∞–Ω–∞–ª–∞"
                        "```"
                    ), inline=False)
                embed1.add_field(name='', value='')
                embed1.add_field(name='**–°—Ç–æ–∏–º–æ—Å—Ç—å**',
                                 value=f'* {diamond.mention}\n * {diamond.mention} (–Ω–∞ 30 –¥–Ω–µ–π) - 499{emoji}\n * {diamond.mention} (–Ω–∞ 60 –¥–Ω–µ–π) - ~~1000~~ 899{emoji} **–ù–∞ 10% –≤—ã–≥–æ–¥–Ω–µ–µ!**\n * {diamond.mention} (–Ω–∞ 90 –¥–Ω–µ–π) - ~~1500~~ 1199{emoji} **–ù–∞ 20% –≤—ã–≥–æ–¥–Ω–µ–µ!**',
                                 inline=False)
                embed1.add_field(name='–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ:',
                                 value=f'–ï—Å–ª–∏ —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ä–æ–ª—å {diamond.mention}, –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–∫—É–ø–∫–µ –µ—ë —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –±—É–¥–µ—Ç –ø—Ä–æ–¥–ª—ë–Ω.',
                                 inline=False)
                embed1.add_field(name='', value='')
                embed1.add_field(name='', value=f'**–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:** {balance_formatted}', inline=False)

                components = [
                    disnake.ui.Button(label=f"üíé –ö—É–ø–∏—Ç—å –Ω–∞ 30 –¥–Ω–µ–π", style=disnake.ButtonStyle.secondary,
                                      emoji=diamond.emoji, custom_id='30'),
                    disnake.ui.Button(label=f"üíé –ö—É–ø–∏—Ç—å –Ω–∞ 60 –¥–Ω–µ–π", style=disnake.ButtonStyle.primary,
                                      emoji=diamond.emoji, custom_id='60'),
                    disnake.ui.Button(label=f"üíé –ö—É–ø–∏—Ç—å –Ω–∞ 90 –¥–Ω–µ–π", style=disnake.ButtonStyle.green,
                                      emoji=diamond.emoji, custom_id='90')
                ]

                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫

                async def button_callback(interaction: disnake.MessageInteraction):
                    button_id = interaction.component.custom_id
                    diamond_role_id = 1044314368717897868  # ID —Ä–æ–ª–∏ "Diamond"

                    if button_id == '30':
                        await process_role(interaction, self.bot, cost=499, duration=2678400, role_id=diamond_role_id,
                                           ephemeral=True)
                    elif button_id == '60':
                        await process_role(interaction, self.bot, cost=899, duration=5097600, role_id=diamond_role_id,
                                           ephemeral=True)
                    elif button_id == '90':
                        await process_role(interaction, self.bot, cost=1199, duration=7776000, role_id=diamond_role_id,
                                           ephemeral=True)

                for button in components:
                    button.callback = button_callback

                view = disnake.ui.View(timeout=None)
                for button in components:
                    view.add_item(button)

                await interaction.response.send_message(embed=embed1, ephemeral=True, view=view)

            if select_menu.values[0] == "2":  # gold
                embed1 = disnake.Embed(color=0x4169E1)
                embed1.set_author(name=f'–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å {gold.name}', icon_url=inter.guild.icon.url)
                embed1.set_thumbnail(url='https://i.gifer.com/origin/63/6309237109affef229b14c3c5dc7308b_w200.gif')
                embed1.add_field(name='',
                                 value=f'{diamond.mention} - –†–æ–ª—å-–ø—Ä–∏–≤–∏–ª–µ–≥–∏—è, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–∞–º—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏ –ø—Ä–µ–¥–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –° —ç—Ç–æ–π —Ä–æ–ª—å—é –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å–µ—Ä–≤–µ—Ä–∞.',
                                 inline=False)
                embed1.add_field(
                    name="**–ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏:**",
                    value=(
                        "```"
                        "‚úÖ üë§ –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
                        "‚úÖ ‚≠êÔ∏è –£–Ω–∏–∫–∞–ª—å–Ω–∞—è –∏–∫–æ–Ω–∫–∞ –≤–æ–∑–ª–µ –Ω–∏–∫–∞\n"
                        "‚úÖ üîí –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ VIP-–∫–∞–Ω–∞–ª—É\n"
                        "‚ùå üìú –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –ñ—É—Ä–Ω–∞–ª—É –∞—É–¥–∏—Ç–∞\n"
                        "‚ùå ‚úèÔ∏è –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞\n"
                        "‚ùå üõ°Ô∏è –ü–æ–ª–Ω–æ–µ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–æ–¥–µ—Ä–∞—Ü–∏–∏\n"
                        "‚úÖ ‚è±Ô∏è –£–±—Ä–∞–Ω –∫—É–ª–¥–∞—É–Ω –º–µ–∂–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥\n"
                        "‚ùå üìÜ –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ —Å—Ä–æ–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –Ω–∞ 10 –¥–Ω–µ–π –ø—Ä–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö\n"
                        "‚úÖ üí∏ –ö–æ–º–∏—Å—Å–∏—è –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ –†—É–º–±–∏–∫–æ–≤ —Å–Ω–∏–∂–µ–Ω–∞ –¥–æ 5%\n"
                        "‚úÖ üè∑Ô∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–∞–Ω–∞–ª–∞"
                        "```"
                    ), inline=False)
                embed1.add_field(name='**–°—Ç–æ–∏–º–æ—Å—Ç—å**',
                                 value=f'* {gold.mention}\n * {gold.mention} (–Ω–∞ 30 –¥–Ω–µ–π) - 249{emoji}\n * {gold.mention} (–Ω–∞ 60 –¥–Ω–µ–π) - ~~500~~ 449{emoji} **–ù–∞ 10% –≤—ã–≥–æ–¥–Ω–µ–µ!**\n * {gold.mention} (–Ω–∞ 90 –¥–Ω–µ–π) - ~~750~~ 599{emoji} **–ù–∞ 20% –≤—ã–≥–æ–¥–Ω–µ–µ!**',
                                 inline=False)
                embed1.add_field(name='–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ:',
                                 value=f'–ï—Å–ª–∏ —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ä–æ–ª—å {gold.mention}, –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–∫—É–ø–∫–µ –µ—ë —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –±—É–¥–µ—Ç –ø—Ä–æ–¥–ª—ë–Ω.',
                                 inline=False)
                embed1.add_field(name='', value='')
                embed1.add_field(name='', value=f'**–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:** {balance_formatted}', inline=False)

                components = [
                    disnake.ui.Button(label=f"‚≠êÔ∏è –ö—É–ø–∏—Ç—å –Ω–∞ 30 –¥–Ω–µ–π", style=disnake.ButtonStyle.secondary,
                                      emoji=diamond.emoji, custom_id='30'),
                    disnake.ui.Button(label=f"‚≠êÔ∏è –ö—É–ø–∏—Ç—å –Ω–∞ 60 –¥–Ω–µ–π", style=disnake.ButtonStyle.primary,
                                      emoji=diamond.emoji, custom_id='60'),
                    disnake.ui.Button(label=f"‚≠êÔ∏è –ö—É–ø–∏—Ç—å –Ω–∞ 90 –¥–Ω–µ–π", style=disnake.ButtonStyle.green,
                                      emoji=diamond.emoji, custom_id='90')
                ]

                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏

                async def button_callback(interaction: disnake.MessageInteraction):
                    button_id = interaction.component.custom_id
                    gold_role_id = 1303396950481174611  # ID —Ä–æ–ª–∏ "Gold"

                    if button_id == '30':
                        await process_role(interaction, self.bot, cost=249, duration=2678400, role_id=gold_role_id,
                                           ephemeral=True)
                    elif button_id == '60':
                        await process_role(interaction, self.bot, cost=449, duration=5097600, role_id=gold_role_id,
                                           ephemeral=True)
                    elif button_id == '90':
                        await process_role(interaction, self.bot, cost=599, duration=7776000, role_id=gold_role_id,
                                           ephemeral=True)

                for button in components:
                    button.callback = button_callback

                view = disnake.ui.View(timeout=None)
                for button in components:
                    view.add_item(button)

                await interaction.response.send_message(embed=embed1, ephemeral=True, view=view)

            if select_menu.values[0] == "3":
                nikname_price = 49
                if collusers.find_one({'id': inter.author.id})['balance'] < nikname_price:
                    error_message = "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ä—É–º–±–∏–∫–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏."
                    embed = create_error_embed(error_message)
                    await inter.edit_original_response(embed=embed)
                    return
                collusers.update_many({'id': inter.author.id}, {'$inc': {'number_of_deal': 1}})
                collusers.find_one_and_update({'id': interaction.author.id}, {'$inc': {'balance': -nikname_price}})
                collservers.update_one({"_id": inter.guild.id}, {"$inc": {"deals": 1}}, upsert=True)
                collservers.update_one({"_id": inter.guild.id}, {"$inc": {"wasted_rumbiks": nikname_price}}, upsert=True)
                components = disnake.ui.TextInput(
                    label=f"–ù–∏–∫–Ω–µ–π–º",
                    custom_id="nickname",
                    style=disnake.TextInputStyle.short,
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º",
                    required=True,
                    min_length=1,
                    max_length=32,
                )

                modal = disnake.ui.Modal(
                    title="–°–º–µ–Ω–∞ –Ω–∏–∫–Ω–µ–π–º–∞",
                    custom_id="my_modal",
                    components=[components]
                )
                await interaction.response.send_modal(modal=modal)


            if select_menu.values[0] == "4":
                global_booster_price_map = {
                    '1_day': 199,
                    '3_days': 499,
                    '7_days': 999
                }

                options = [
                    disnake.ui.Button(label="üöÄ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ 1 –¥–µ–Ω—å", style=disnake.ButtonStyle.secondary,
                                      custom_id='1_day'),
                    disnake.ui.Button(label="üöÄ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ 3 –¥–Ω—è", style=disnake.ButtonStyle.primary, custom_id='3_days'),
                    disnake.ui.Button(label="üöÄ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ 7 –¥–Ω–µ–π", style=disnake.ButtonStyle.success, custom_id='7_days')
                ]

                def get_day_word(day_count):
                    if day_count == 1:
                        return '–¥–µ–Ω—å'
                    elif day_count in [2, 3, 4]:
                        return '–¥–Ω—è'
                    else:
                        return '–¥–Ω–µ–π'

                async def button_callback(interaction: disnake.MessageInteraction):
                    button_id = interaction.component.custom_id
                    cost = global_booster_price_map[button_id]
                    duration_map = {
                        '1_day': 86400,
                        '3_days': 259200,
                        '7_days': 604800
                    }
                    duration = duration_map[button_id]
                    day_count = int(button_id.split('_')[0])

                    if collusers.find_one({'id': interaction.author.id})['balance'] < cost:
                        error_message = "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ä—É–º–±–∏–∫–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏."
                        embed = create_error_embed(error_message)
                        await interaction.send(embed=embed, ephemeral=True)
                        return

                    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞
                    server_data = collservers.find_one({'_id': interaction.author.guild.id})
                    current_timestamp = server_data['global_booster_timestamp']
                    current_time = int(datetime.now().timestamp())
                    admin_multiplier = server_data['admin_booster_multiplier']

                    if current_timestamp != 0 and current_timestamp > current_time:
                        # –ü—Ä–æ–¥–ª–µ–Ω–∏–µ –±—É—Å—Ç–µ—Ä–∞
                        new_timestamp = current_timestamp + duration
                        extend_embed = disnake.Embed(
                            description=f"**–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –±—É—Å—Ç–µ—Ä–∞ –†—É–º–±–∏–∫–æ–≤ –ø—Ä–æ–¥–ª—ë–Ω –Ω–∞ {day_count} {get_day_word(day_count)}.**\n –¢–µ–ø–µ—Ä—å –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–º–æ–≥—É—Ç –¥–æ–ª—å—à–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –±—É—Å—Ç–µ—Ä–æ–º.",
                            color=0x00ff00,
                            timestamp=datetime.now()
                        )
                        extend_embed.set_author(name="–ë—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤ –ø—Ä–æ–¥–ª—ë–Ω!",
                                                icon_url="https://i.imgur.com/vlX2dxG.gif")
                        extend_embed.set_thumbnail(url="https://www.emojiall.com/images/240/telegram/2705.gif")
                        extend_embed.set_footer(text="–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
                                                icon_url=interaction.guild.icon.url)

                        await interaction.send(embed=extend_embed, ephemeral=True)

                        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–≤—à–∏—Ö –±—É—Å—Ç–µ—Ä
                        collservers.find_one_and_update(
                            {'_id': interaction.author.guild.id},
                            {'$addToSet': {'global_booster_activated_by': interaction.author.id}}
                        )
                    else:
                        # –ü–æ–∫—É–ø–∫–∞ –±—É—Å—Ç–µ—Ä–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–Ω–æ–∂–∏—Ç–µ–ª—è
                        new_timestamp = current_time + duration
                        purchase_embed = disnake.Embed(
                            description=f"**–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –±—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤ x2 –Ω–∞ {day_count} {get_day_word(day_count)}.**\n –¢–µ–ø–µ—Ä—å –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –±—É–¥—É—Ç –ø–æ–ª—É—á–∞—Ç—å –≤–¥–≤–æ–µ –±–æ–ª—å—à–µ –†—É–º–±–∏–∫–æ–≤ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —á–∞—Ç–∞—Ö –∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö.",
                            color=0x00ff00,
                            timestamp=datetime.now()
                        )
                        purchase_embed.set_author(name="–ë—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤ –ø—Ä–∏–æ–±—Ä–µ—Ç—ë–Ω!",
                                                  icon_url="https://i.imgur.com/vlX2dxG.gif")
                        purchase_embed.set_thumbnail(url="https://www.emojiall.com/images/240/telegram/2705.gif")
                        purchase_embed.set_footer(text="–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
                                                  icon_url=interaction.guild.icon.url)
                        await interaction.send(embed=purchase_embed, ephemeral=True)

                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –º–Ω–æ–∂–∏—Ç–µ–ª—è –±—É—Å—Ç–µ—Ä–∞
                        if admin_multiplier == 1 or admin_multiplier == 0:
                            new_multiplier = 2  # –ï—Å–ª–∏ –∞–¥–º–∏–Ω—Å–∫–∏–π –±—É—Å—Ç–µ—Ä 1x –∏–ª–∏ 0x, —Ç–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 2
                        else:
                            new_multiplier = admin_multiplier + 1  # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ 1 –∫ —Ç–µ–∫—É—â–µ–º—É –∞–¥–º–∏–Ω—Å–∫–æ–º—É –º–Ω–æ–∂–∏—Ç–µ–ª—é

                        collservers.find_one_and_update(
                            {'_id': interaction.author.guild.id},
                            {'$set': {'multiplier': new_multiplier}}
                        )

                        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–≤—à–∏—Ö –±—É—Å—Ç–µ—Ä
                        collservers.find_one_and_update(
                            {'_id': interaction.author.guild.id},
                            {'$addToSet': {'global_booster_activated_by': interaction.author.id}}
                        )

                    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—É—Å—Ç–µ—Ä–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                    collservers.find_one_and_update(
                        {'_id': interaction.author.guild.id},
                        {
                            '$set': {
                                'global_booster_timestamp': new_timestamp,
                                'global_booster_multiplier': 2
                            }
                        }
                    )

                    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–¥–µ–ª–æ–∫
                    collusers.update_one({'id': interaction.author.id}, {'$inc': {'number_of_deal': 1}})
                    collusers.find_one_and_update({'id': interaction.author.id}, {'$inc': {'balance': -cost}})
                    collservers.update_one({"_id": inter.guild.id}, {"$inc": {"deals": 1}}, upsert=True)
                    collservers.update_one({"_id": inter.guild.id}, {"$inc": {"wasted_rumbiks": cost}}, upsert=True)

                    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ —Å–µ—Ä–≤–µ—Ä–∞
                    channel = interaction.author.guild.get_channel(489867322039992323)
                    if current_timestamp != 0 and current_timestamp > current_time:
                        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ –±—É—Å—Ç–µ—Ä–∞
                        server_embed = disnake.Embed(
                            title="–ë—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤ x2 –ø—Ä–æ–¥–ª—ë–Ω!",
                            description=f"{interaction.author.mention} __–ø—Ä–æ–¥–ª–∏–ª__ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –±—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤ ``x2`` –Ω–∞ ``{day_count} {get_day_word(day_count)}``!\n–ù–æ–≤—ã–π —Å—Ä–æ–∫ –æ–∫–æ–Ω—á–∞–Ω–∏—è –±—É—Å—Ç–µ—Ä–∞: <t:{new_timestamp}:R>.\n **–ü–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏–º –¥–æ–±—Ä—è–∫–∞ –≤ —á–∞—Ç–µ!**",
                            color=0x00faff,
                            timestamp=datetime.now()
                        )
                        server_embed.set_author(name=f"{inter.user.display_name}", icon_url=f"{inter.user.avatar.url}")
                        server_embed.set_thumbnail(url='https://i.imgur.com/vlX2dxG.gif')
                        server_embed.set_footer(text=f'–ü—Ä–æ–¥–ª–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –±—É—Å—Ç–µ—Ä–∞', icon_url=inter.guild.icon.url)
                    else:
                        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–∫—É–ø–∫–µ –±—É—Å—Ç–µ—Ä–∞
                        server_embed = disnake.Embed(
                            title="–ë—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤ x2 –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!",
                            description=f"{interaction.author.mention} __–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª__ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –±—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤ ``x2`` –Ω–∞ ``{day_count} {get_day_word(day_count)}``!\n–ë—É—Å—Ç–µ—Ä –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è <t:{new_timestamp}:R>.\n **–ü–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏–º –¥–æ–±—Ä—è–∫–∞ –≤ —á–∞—Ç–µ!**",
                            color=0x00faff,
                            timestamp=datetime.now()
                        )
                        server_embed.set_author(name=f"{inter.user.display_name}", icon_url=f"{inter.user.avatar.url}")
                        server_embed.set_thumbnail(url='https://i.imgur.com/vlX2dxG.gif')
                        server_embed.set_footer(text=f'–ê–∫—Ç–∏–≤–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –±—É—Å—Ç–µ—Ä–∞', icon_url=inter.guild.icon.url)
                    await channel.send(embed=server_embed)

                for button in options:
                    button.callback = button_callback

                view = disnake.ui.View(timeout=None)
                for button in options:
                    view.add_item(button)

                embed = disnake.Embed(color=0x4169E1)
                embed.set_author(name=f'–í—ã–±–µ—Ä–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ë—É—Å—Ç–µ—Ä–∞', icon_url=inter.guild.icon.url)
                embed.set_thumbnail(url='https://i.gifer.com/origin/63/6309237109affef229b14c3c5dc7308b_w200.gif')
                embed.add_field(name='', value='**–ì–ª–æ–±–∞–ª—å–Ω—ã–π –±—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤** ‚Äî –í–¥–≤–æ–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∑–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —á–∞—Ç–∞—Ö.')
                embed.add_field(name='–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –±—É—Å—Ç–µ—Ä–∞ —Ä—É–º–±–∏–∫–æ–≤ x2:',
                                value='', inline=False)
                embed.add_field(name='**–°—Ç–æ–∏–º–æ—Å—Ç—å:**',
                                value=f'* –ì–ª–æ–±–∞–ª—å–Ω—ã–π –±—É—Å—Ç–µ—Ä —Ö2\n * –ë—É—Å—Ç–µ—Ä (–Ω–∞ 1 –¥–µ–Ω—å) - 199{emoji}\n * –ë—É—Å—Ç–µ—Ä (–Ω–∞ 3 –¥–Ω—è) - ~~600~~ 499{emoji} **–ù–∞ 17% –≤—ã–≥–æ–¥–Ω–µ–µ!**\n * –ë—É—Å—Ç–µ—Ä (–Ω–∞ 7 –¥–Ω–µ–π) - ~~1400~~ 999{emoji} **–ù–∞ 29% –≤—ã–≥–æ–¥–Ω–µ–µ!**',
                                inline=False)
                embed.add_field(name='–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ:',
                                value=f'–ï—Å–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –±—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤ —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω, –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–∫—É–ø–∫–µ –µ–≥–æ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –±—É–¥–µ—Ç –ø—Ä–æ–¥–ª—ë–Ω.',
                                inline=False)
                embed.add_field(name='', value='')
                embed.add_field(name='', value=f'**–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:** {balance_formatted}', inline=False)
                await interaction.response.send_message(embed=embed, view=view, ephemeral=True)

            if select_menu.values[0] == "5":
                user_data = collusers.find_one({'id': inter.author.id})
                keys_count = user_data.get('keys', 0)
                embed1 = disnake.Embed(color=0x4169E1)
                embed1.set_author(name=f'–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π', icon_url=inter.guild.icon.url)
                embed1.set_thumbnail(url='https://i.gifer.com/origin/63/6309237109affef229b14c3c5dc7308b_w200.gif')
                embed1.add_field(name='',
                                 value=f'–ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∫–ª—é—á - —ç—Ç–æ—Ç —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–ª—é—á –ø–æ–∫—Ä—ã—Ç –¥—Ä–µ–≤–Ω–∏–º–∏ —Ä—É–Ω–∞–º–∏, –º–µ—Ä—Ü–∞—é—â–∏–º–∏ –≤ –ø–æ–ª—É–º—Ä–∞–∫–µ. –ù–∏–∫—Ç–æ –Ω–µ –∑–Ω–∞–µ—Ç, –æ—Ç–∫—É–¥–∞ –æ–Ω –ø–æ—è–≤–∏–ª—Å—è, –Ω–æ –≥–æ–≤–æ—Ä—è—Ç, —á—Ç–æ –æ–Ω —Å–ø–æ—Å–æ–±–µ–Ω –æ—Ç–∫—Ä—ã—Ç—å **–º–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —è—â–∏–∫**, —Ö—Ä–∞–Ω—è—â–∏–π –≤ —Å–µ–±–µ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã –∏ —Ä–µ–¥–∫–∏–µ —Å–æ–∫—Ä–æ–≤–∏—â–∞. –û—Ç–≤–∞–∂–∏—à—å—Å—è –ª–∏ —Ç—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏?',
                                 inline=False)
                embed1.add_field(name='–ß—Ç–æ –º–æ–∂–µ—Ç—å –≤—ã–ø–∞—Å—Ç—å?',
                                 value='```üîë –ö–ª—é—á–∏ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–æ–≤—ã—Ö —è—â–∏–∫–æ–≤.\n'
                                       'üíé –†–æ–ª–∏ —É—Ä–æ–≤–Ω—è Diamond –∏ Gold –æ—Ç 1 –¥–æ 180 –¥–Ω–µ–π.\n'
                                       'üí∞ –†–∞–∑–ª–∏—á–Ω—ã–µ —Å—É–º–º—ã –†—É–º–±–∏–∫–æ–≤ –æ—Ç 1 –¥–æ 5000.\n'
                                       'üîá –ó–∞–±–∞–≤–Ω—ã–π "–ø—Ä–∏–∑" –≤ –≤–∏–¥–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –º—å—é—Ç–∞ –æ—Ç 1 –¥–æ 40 –º–∏–Ω—É—Ç.\n'
                                       'üòî –ò, –∫–æ–Ω–µ—á–Ω–æ, —à–∞–Ω—Å –Ω–∞ —Ç–æ, —á—Ç–æ —è—â–∏–∫ –æ–∫–∞–∂–µ—Ç—Å—è –ø—É—Å—Ç—ã–º.```')
                embed1.add_field(name='', value='–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —à–∞–Ω—Å–∞—Ö: ``/mystery-box list``', inline=False)
                embed1.add_field(name='**–°—Ç–æ–∏–º–æ—Å—Ç—å:**',
                                 value=f'* üîëÔ∏è –ö–ª—é—á\n * –æ—Ç **1üîëÔ∏è+** = 49{emoji}\n * –æ—Ç **5üîëÔ∏è+** = ~~250~~ 236{emoji} **–ù–∞ 5% –≤—ã–≥–æ–¥–Ω–µ–µ!**\n * –æ—Ç **10üîëÔ∏è+** = ~~500~~ 449{emoji} **–ù–∞ 10% –≤—ã–≥–æ–¥–Ω–µ–µ!**\n * –æ—Ç **50üîëÔ∏è+** = ~~2500~~ 2125{emoji} **–ù–∞ 15% –≤—ã–≥–æ–¥–Ω–µ–µ!**\n * –æ—Ç **100üîëÔ∏è+** = ~~5000~~ 3999{emoji} **–ù–∞ 20% –≤—ã–≥–æ–¥–Ω–µ–µ!**\n * –æ—Ç **200üîëÔ∏è+** = ~~10000~~ 6999{emoji} **–ù–∞ 30% –≤—ã–≥–æ–¥–Ω–µ–µ!**',
                                 inline=False)
                embed1.add_field(name='–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ:',
                                 value=f'–ß–µ–º –±–æ–ª—å—à–µ –∫–ª—é—á–µ–π –≤—ã –ø–æ–∫—É–ø–∞–µ—Ç–µ - —Ç–µ–º –≤—ã–≥–æ–¥–Ω–µ–µ!',
                                 inline=False)
                embed1.add_field(name='', value='')
                embed1.add_field(name='', value=f'**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π:** {keys_count}üîë', inline=False)
                embed1.add_field(name='', value=f'**–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:** {balance_formatted}', inline=False)

                components = [
                    disnake.ui.Button(label=f"–í—ã–±—Ä–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –ø–æ–∫—É–ø–∫–∏", style=disnake.ButtonStyle.blurple,
                                      emoji="üîë", custom_id='30'),
                ]

                # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–ª–∞—Å—Å KeyModal –æ–±—ä—è–≤–ª–µ–Ω –∑–∞—Ä–∞–Ω–µ–µ
                class KeyModal(disnake.ui.Modal):
                    def __init__(self):
                        components = [
                            disnake.ui.TextInput(
                                label="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π",
                                placeholder="–ß–µ–º –±–æ–ª—å—à–µ - —Ç–µ–º –≤—ã–≥–æ–¥–Ω–µ–µ!",
                                custom_id="key_amount",
                                style=disnake.TextInputStyle.short,
                            )
                        ]
                        super().__init__(title="–ü–æ–∫—É–ø–∫–∞ –∫–ª—é—á–µ–π", custom_id="key_modal", components=components)

                    async def callback(self, interaction: disnake.ModalInteraction):
                        key_amount = int(interaction.text_values["key_amount"])
                        price = calculate_discounted_price(key_amount)

                        user_data = collusers.find_one({'id': interaction.author.id})
                        if user_data['balance'] < price:
                            error_message = "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ä—É–º–±–∏–∫–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏."
                            embed = create_error_embed(error_message)
                            await interaction.send(embed=embed, ephemeral=True)
                            return

                        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–π embed
                        embed_confirm = disnake.Embed(
                            title="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏",
                            description=f"–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ **{key_amount}**üîë –∫–ª—é—á–µ–π –∑–∞ **{price}**{emoji}?",
                            color=0x00ff00
                        )

                        # –ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                        class ConfirmView(disnake.ui.View):
                            def __init__(self):
                                super().__init__(timeout=300)

                                button_confirm = disnake.ui.Button(
                                    label="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
                                    style=disnake.ButtonStyle.green,
                                    custom_id="confirm_purchase"
                                )
                                button_confirm.callback = self.confirm_purchase
                                self.add_item(button_confirm)

                            async def confirm_purchase(self, button_interaction: disnake.MessageInteraction):
                                collusers.update_many({'id': interaction.author.id},
                                                      {'$inc': {'number_of_deal': 1}})
                                collusers.find_one_and_update({'id': interaction.author.id},
                                                              {'$inc': {'balance': -price}})
                                collusers.update_many({'id': interaction.author.id}, {'$inc': {'keys': key_amount}})
                                collservers.update_one({"_id": interaction.guild.id}, {"$inc": {"deals": 1}},
                                                       upsert=True)
                                collservers.update_one({"_id": interaction.guild.id},
                                                       {"$inc": {"wasted_rumbiks": price}}, upsert=True)

                                embed_success = disnake.Embed(
                                    description=f"–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ **{key_amount}**üîë –∫–ª—é—á–µ–π –∑–∞ **{price}**{emoji}\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É ``/mystery-box open``, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å **–º–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —è—â–∏–∫**.",
                                    colour=0x00ff00,
                                    timestamp=datetime.now()
                                )
                                embed_success.set_author(name="–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –ö–ª—é—á–∏!",
                                                         icon_url="https://i.imgur.com/vlX2dxG.gif")
                                embed_success.set_thumbnail(
                                    url="https://www.emojiall.com/images/240/telegram/2705.gif")
                                embed_success.set_footer(text="–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
                                                         icon_url=interaction.guild.icon.url)

                                await button_interaction.response.edit_message(embed=embed_success, view=None)

                        view_confirm = ConfirmView()
                        await interaction.send(embed=embed_confirm, view=view_confirm, ephemeral=True)

                async def button_callback(inter: disnake.MessageInteraction):
                    await inter.response.send_modal(KeyModal())

                components[0].callback = button_callback

                view = disnake.ui.View()
                for component in components:
                    view.add_item(component)

                await interaction.response.send_message(embed=embed1, view=view, ephemeral=True)

            def calculate_discounted_price(key_amount):
                base_price = 50  # –¶–µ–Ω–∞ –∑–∞ 1 –∫–ª—é—á –±–µ–∑ —Å–∫–∏–¥–∫–∏

                if 1 <= key_amount <= 4:
                    return key_amount * base_price - 1  # –ë–µ–∑ —Å–∫–∏–¥–∫–∏
                elif 5 <= key_amount <= 9:
                    discount = 0.05  # 5% —Å–∫–∏–¥–∫–∞
                elif 10 <= key_amount <= 49:
                    discount = 0.10  # 10% —Å–∫–∏–¥–∫–∞
                elif 50 <= key_amount <= 99:
                    discount = 0.15  # 15% —Å–∫–∏–¥–∫–∞
                elif 100 <= key_amount <= 199:
                    discount = 0.20  # 20% —Å–∫–∏–¥–∫–∞
                else:  # 200 –∏ –±–æ–ª–µ–µ
                    discount = 0.30  # 30% —Å–∫–∏–¥–∫–∞

                discounted_price_per_key = base_price * (1 - discount)
                return round(key_amount * discounted_price_per_key - 1)  # –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ

        select_menu.callback = select_callback

        # –°–æ–∑–¥–∞–µ–º view –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–µ–≥–æ select menu
        view = disnake.ui.View()
        view.add_item(select_menu)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å view

        await inter.edit_original_response(embed=embed, view=view)


    @commands.Cog.listener()
    async def on_voice_state_update(self, member, before, after):
        global time_in_voice, multiplier


        if member.bot:
            return

        channel = member.guild.get_channel(944562833901899827)
        afk_channel_id = 516299058348818433
        now = int(datetime.now().timestamp())

        # Check if the user is in mute before entering the channel
        if after.channel is not None and after.self_mute:
            if member.id not in mute_timestamps:
                mute_timestamps[member.id] = []
            if not mute_timestamps[member.id] or mute_timestamps[member.id][-1][1] is not None:
                mute_timestamps[member.id].append((now, None))

        # Mute status changed
        if before.self_mute != after.self_mute:
            if not after.self_mute:
                if member.id in mute_timestamps and mute_timestamps[member.id][-1][1] is None:
                    mute_timestamps[member.id][-1] = (mute_timestamps[member.id][-1][0], now)

        # User joined a voice channel
        if before.channel is None and after.channel is not None:
            voice_timestamps[member.id] = now

        # User left a voice channel
        elif before.channel is not None and after.channel is None:
            join_time = voice_timestamps.pop(member.id, None)
            if join_time:
                leave_time = now
                duration = leave_time - join_time

                # Calculate total mute time
                total_mute_time = 0
                if member.id in mute_timestamps:
                    for mute_start, mute_end in mute_timestamps[member.id]:
                        if mute_end is None:
                            mute_end = leave_time
                        total_mute_time += mute_end - mute_start
                    duration -= total_mute_time
                    mute_timestamps.pop(member.id, None)

                if member.id in total_time:
                    total_time[member.id] += duration + total_mute_time
                else:
                    total_time[member.id] = duration + total_mute_time

                # Handle leaving voice channel other than AFK
                if before.channel.id != afk_channel_id:
                    minutes = round(total_time[member.id] / 60, 2)
                    rumbiks = round(duration / 60 * 0.1, 2)

                    multiplier = collservers.find_one({'_id': member.guild.id})['multiplier']
                    if rumbiks > 0.01:
                        collusers.find_one_and_update({'id': member.id}, {'$inc': {'balance': rumbiks * multiplier}})
                        collservers.update_one({"_id": member.guild.id}, {"$inc": {"voice_rumbiks": rumbiks * multiplier, "total_rumbicks": rumbiks * multiplier}}, upsert=True)

                    if multiplier > 1:
                        rumbikswithboost = rumbiks * multiplier
                    else:
                        rumbikswithboost = None

                    # Update total voice time in seconds
                    collusers.find_one_and_update({'id': member.id}, {'$inc': {'time_in_voice': total_time[member.id]}})
                    collservers.update_one({"_id": member.guild.id}, {"$inc": {"time_in_voice": total_time[member.id]}}, upsert=True)
                    time_in_voice = collusers.find_one({'id': member.id})['time_in_voice']

                    # Use the helper function to format the duration
                    formatted_duration = format_time(duration)
                    formatted_total_time = format_time(total_time[member.id])
                    formatted_time_in_voice = format_time(time_in_voice)

                    embed = disnake.Embed(color=0xe70404, timestamp=datetime.now())
                    embed.set_thumbnail(url='https://i.imgur.com/B0w8aJT.gif')
                    embed.add_field(
                        name='**–ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:**',
                        value=(
                            f'–£—á–∞—Å—Ç–Ω–∏–∫: `{member.display_name}` ({member.mention})\n'
                            f'–í—Ä–µ–º—è –≤ –≤–æ–π—Å–µ: —Å <t:{join_time}:T> –¥–æ <t:{leave_time}:T>\n'
                            f'–í—Ä–µ–º—è (–±–µ–∑ —É—á—ë—Ç–∞ –º—É—Ç–∞): `{formatted_duration}`\n'
                            f'–í—Ä–µ–º—è (–≤—Å–µ–≥–æ): `{formatted_total_time}`\n'
                            f'{f"**–í—ã–¥–∞–Ω–æ —Å —É—á–µ—Ç–æ–º –±—É—Å—Ç–µ—Ä–∞:** `{rumbikswithboost}`{emoji}" if multiplier > 1 else f"**–í—ã–¥–∞–Ω–æ:** `{rumbiks}`{emoji}"}\n'
                            f'–û–±—â–µ–µ –≤—Ä–µ–º—è –≤ –≤–æ–π—Å–µ: `{formatted_time_in_voice}`'
                        )
                    )
                    embed.set_author(name=member.display_name, icon_url=member.display_avatar.url)
                    embed.set_footer(text=f"ID: {member.id}", icon_url=member.guild.icon.url)
                    thread = member.guild.get_thread(1270673733178101801)
                    await thread.send(embed=embed)
                    total_time[member.id] = 0

        # User switched voice channels
        elif before.channel is not None and after.channel is not None and before.channel.id != after.channel.id:
            join_time = voice_timestamps.pop(member.id, None)
            if join_time:
                leave_time = now
                duration = leave_time - join_time

                # Calculate total mute time
                total_mute_time = 0
                if member.id in mute_timestamps:
                    for mute_start, mute_end in mute_timestamps[member.id]:
                        if mute_end is None:
                            mute_end = leave_time
                        total_mute_time += mute_end - mute_start
                    duration -= total_mute_time
                    mute_timestamps.pop(member.id, None)

                if member.id in total_time:
                    total_time[member.id] += duration + total_mute_time
                else:
                    total_time[member.id] = duration + total_mute_time

                # Save time spent in previous channel before moving to AFK
                if after.channel.id == afk_channel_id:
                    minutes = round(duration / 60, 2)
                    rumbiks = round(duration / 60 * 0.1, 2)

                    multiplier = collservers.find_one({'_id': member.guild.id})['multiplier']
                    if rumbiks > 0.01:
                        collusers.find_one_and_update({'id': member.id}, {'$inc': {'balance': rumbiks * multiplier}})
                        collservers.update_one({"_id": member.guild.id},{"$inc": {"voice_rumbiks": rumbiks * multiplier}, "total_rumbicks": rumbiks * multiplier}, upsert=True)
                    if multiplier > 1:
                        rumbikswithboost = rumbiks * multiplier
                    else:
                        rumbikswithboost = None

                    # Update total voice time in seconds
                    collusers.find_one_and_update({'id': member.id}, {'$inc': {'time_in_voice': total_time[member.id]}})
                    collservers.update_one({"_id": member.guild.id}, {"$inc": {"time_in_voice": total_time[member.id]}}, upsert=True)
                    time_in_voice = collusers.find_one({'id': member.id})['time_in_voice']

                    # Use the helper function to format the duration
                    formatted_duration = format_time(duration)
                    formatted_total_time = format_time(total_time[member.id])
                    formatted_time_in_voice = format_time(time_in_voice)

                    embed = disnake.Embed(color=0xe70404, timestamp=datetime.now())
                    embed.set_thumbnail(
                        url='https://i.imgur.com/B0w8aJT.gif')
                    embed.add_field(
                        name='**–ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:**',
                        value=(
                            f'–£—á–∞—Å—Ç–Ω–∏–∫: `{member.display_name}` ({member.mention})\n'
                            f'–í—Ä–µ–º—è –≤ –≤–æ–π—Å–µ: —Å <t:{join_time}:T> –¥–æ <t:{leave_time}:T>\n'
                            f'–í—Ä–µ–º—è (–±–µ–∑ —É—á—ë—Ç–∞ –º—É—Ç–∞): `{formatted_duration}`\n'
                            f'–í—Ä–µ–º—è (–≤—Å–µ–≥–æ): `{formatted_total_time}`\n'
                            f'{f"**–í—ã–¥–∞–Ω–æ —Å —É—á–µ—Ç–æ–º –±—É—Å—Ç–µ—Ä–∞:** `{rumbikswithboost}`{emoji}" if multiplier > 1 else f"**–í—ã–¥–∞–Ω–æ:** `{rumbiks}`{emoji}"}\n'
                            f'–û–±—â–µ–µ –≤—Ä–µ–º—è –≤ –≤–æ–π—Å–µ: `{formatted_time_in_voice}`'
                        )
                    )
                    embed.set_author(name=member.display_name, icon_url=member.display_avatar.url)
                    embed.set_footer(text=f"ID: {member.id}", icon_url=member.guild.icon.url)
                    thread = member.guild.get_thread(1270673733178101801)
                    await thread.send(embed=embed)
                    total_time[member.id] = 0
            voice_timestamps[member.id] = now

    def convert_to_seconds(self, time_str):
        try:
            value = int(time_str[:-1])
        except ValueError:
            raise ValueError(f"Invalid time format: {time_str}")

        unit = time_str[-1]
        if unit == '–¥' or unit == 'd':
            return value * 24 * 60 * 60
        elif unit == '—á' or unit == 'h':
            return value * 60 * 60
        elif unit == '–º' or unit == 'm':
            return value * 60
        elif unit == '—Å' or unit == 's':
            return value
        else:
            raise ValueError(f"Invalid time unit: {time_str[-1]}")

    @tasks.loop(seconds=500)
    async def check_booster(self):
        server_id = 489867322039992320
        server_data = collservers.find_one({'_id': server_id})

        timestamp_booster = server_data['booster_timestamp']
        global_timestamp_booster = server_data['global_booster_timestamp']
        global_booster_multiplier = server_data['global_booster_multiplier']
        event_booster_multiplier = server_data['admin_booster_multiplier']  # –∑–∞–º–µ–Ω–µ–Ω–æ
        current_multiplier = server_data['multiplier']  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –æ–±—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å
        timestamp_now = int(datetime.now().timestamp())

        async def send_message_on_booster_end(booster_type, multiplier):
            channel = self.bot.get_channel(489867322039992323)
            guild = self.bot.get_guild(server_id)  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–µ—Ä–≤–µ—Ä–∞
            icon_url = guild.icon.url if guild.icon else None  # –ü–æ–ª—É—á–∞–µ–º URL –∏–∫–æ–Ω–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞

            embed = disnake.Embed(
                title=f"{booster_type} –±—É—Å—Ç–µ—Ä –∑–∞–∫–æ–Ω—á–∏–ª—Å—è.",
                description=f"–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –±—É—Å—Ç–µ—Ä–∞ –∏—Å—Ç—ë–∫.\n```–¢–µ–∫—É—â–∏–π –æ–±—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å: x{multiplier}```",
                color=0xff0000,
                timestamp = datetime.now()
            )
            embed.set_thumbnail(url='https://i.imgur.com/vlX2dxG.gif')
            embed.set_footer(text=f'–ñ–∞–ª—å, —á—Ç–æ –ø—Ä–∏—è—Ç–Ω—ã–µ –≤–µ—â–∏ –Ω–µ –≤–µ—á–Ω—ã.', icon_url=icon_url)
            await channel.send(embed=embed)

        if timestamp_booster != 0 and global_timestamp_booster == 0:
            if timestamp_booster < timestamp_now:
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'booster_timestamp': 0}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'multiplier': 1}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'admin_booster_multiplier': 0}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'admin_booster_activated_by': []}})
                await send_message_on_booster_end("–ò–≤–µ–Ω—Ç–æ–≤—ã–π", 1)  # –ø–µ—Ä–µ–¥–∞–µ–º 1 –∫–∞–∫ –º–Ω–æ–∂–∏—Ç–µ–ª—å
                return

        elif timestamp_booster == 0 and global_timestamp_booster != 0:
            if timestamp_now > global_timestamp_booster:
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'multiplier': 1}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'global_booster_timestamp': 0}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'global_booster_multiplier': 0}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'global_booster_activated_by': []}})
                await send_message_on_booster_end("–ì–ª–æ–±–∞–ª—å–Ω—ã–π", 1)  # –ø–µ—Ä–µ–¥–∞–µ–º 1 –∫–∞–∫ –º–Ω–æ–∂–∏—Ç–µ–ª—å
                return

        elif timestamp_booster != 0 and global_timestamp_booster != 0:
            if timestamp_now > global_timestamp_booster and timestamp_now > timestamp_booster:
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'global_booster_timestamp': 0}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'global_booster_multiplier': 0}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'booster_timestamp': 0}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'multiplier': 1}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'admin_booster_multiplier': 0}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'admin_booster_activated_by': []}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'global_booster_activated_by': []}})
                await send_message_on_booster_end("–ò–≤–µ–Ω—Ç–æ–≤—ã–π –∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–π", 1)  # –ø–µ—Ä–µ–¥–∞–µ–º 1 –∫–∞–∫ –º–Ω–æ–∂–∏—Ç–µ–ª—å
                return

            elif timestamp_now > global_timestamp_booster and timestamp_now < timestamp_booster:
                new_multiplier = event_booster_multiplier
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'multiplier': new_multiplier}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'global_booster_timestamp': 0}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'global_booster_multiplier': 0}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'global_booster_activated_by': []}})
                await send_message_on_booster_end("–ì–ª–æ–±–∞–ª—å–Ω—ã–π", new_multiplier)  # –ø–µ—Ä–µ–¥–∞–µ–º –Ω–æ–≤—ã–π –º–Ω–æ–∂–∏—Ç–µ–ª—å
                return

            elif timestamp_now > timestamp_booster and timestamp_now < global_timestamp_booster:
                new_multiplier = global_booster_multiplier
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'multiplier': new_multiplier}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'booster_timestamp': 0}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'admin_booster_multiplier': 0}})
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'admin_booster_activated_by': []}})
                await send_message_on_booster_end("–ò–≤–µ–Ω—Ç–æ–≤—ã–π", new_multiplier)  # –ø–µ—Ä–µ–¥–∞–µ–º –Ω–æ–≤—ã–π –º–Ω–æ–∂–∏—Ç–µ–ª—å
                return

        if timestamp_booster != 0 and timestamp_now > timestamp_booster:
            if global_timestamp_booster == 0 or timestamp_now > global_timestamp_booster:
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'multiplier': 1}})
                current_multiplier = 1
            else:
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'multiplier': global_booster_multiplier}})
                current_multiplier = global_booster_multiplier

            collservers.find_one_and_update({'_id': server_id}, {'$set': {'booster_timestamp': 0}})
            collservers.find_one_and_update({'_id': server_id}, {'$set': {'admin_booster_multiplier': 0}})
            collservers.find_one_and_update({'_id': server_id}, {'$set': {'admin_booster_activated_by': []}})
            await send_message_on_booster_end("–ò–≤–µ–Ω—Ç–æ–≤—ã–π", current_multiplier)  # –ø–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—É—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å
            return

        if global_timestamp_booster != 0 and timestamp_now > global_timestamp_booster:
            if timestamp_booster == 0 or timestamp_now > timestamp_booster:
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'multiplier': 1}})
                current_multiplier = 1
            else:
                collservers.find_one_and_update({'_id': server_id}, {'$set': {'multiplier': event_booster_multiplier}})
                current_multiplier = event_booster_multiplier

            collservers.find_one_and_update({'_id': server_id}, {'$set': {'global_booster_timestamp': 0}})
            collservers.find_one_and_update({'_id': server_id}, {'$set': {'global_booster_multiplier': 0}})
            collservers.find_one_and_update({'_id': server_id}, {'$set': {'global_booster_activated_by': []}})
            await send_message_on_booster_end("–ì–ª–æ–±–∞–ª—å–Ω—ã–π", current_multiplier)  # –ø–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—É—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å
            return

    @commands.slash_command(name='booster', description='–í–∫–ª—é—á–∞–µ—Ç –±—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤', contexts=disnake.InteractionContextTypes(guild=True, bot_dm=False, private_channel=False))
    @commands.cooldown(rate=1, per=15, type=commands.BucketType.user)
    @check_roles("admin")
    async def booster(self, inter: disnake.ApplicationCommandInteraction, –º–Ω–æ–∂–∏—Ç–µ–ª—å: int, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: str,
                      –∏–≤–µ–Ω—Ç: str = ''):
        try:
            # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —Å–µ–∫—É–Ω–¥—ã
            –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å_–≤_—Å–µ–∫—É–Ω–¥–∞—Ö = self.convert_to_seconds(–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)
        except Exception as e:
            embed = disnake.Embed(color=0xe70404)
            embed.add_field(name='–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞', value='–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ —Å–µ–∫—É–Ω–¥—ã')
            await inter.response.send_message(embed=embed, ephemeral=True)
            return

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Ä–∞—Å—á—ë—Ç –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –±—É—Å—Ç–µ—Ä–∞
        timestamp = int(datetime.now().timestamp()) + –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å_–≤_—Å–µ–∫—É–Ω–¥–∞—Ö
        server_data = collservers.find_one({'_id': inter.author.guild.id})
        global_booster_active = server_data['global_booster_timestamp'] != 0 and server_data[
            'global_booster_timestamp'] > int(datetime.now().timestamp())

        if global_booster_active:
            # –£–º–µ–Ω—å—à–∞–µ–º –æ–±—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å –Ω–∞ 1 –ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–º –±—É—Å—Ç–µ—Ä–µ
            –Ω–æ–≤—ã–π_–º–Ω–æ–∂–∏—Ç–µ–ª—å = server_data['multiplier'] + int(–º–Ω–æ–∂–∏—Ç–µ–ª—å) - 1
        else:
            –Ω–æ–≤—ã–π_–º–Ω–æ–∂–∏—Ç–µ–ª—å = int(–º–Ω–æ–∂–∏—Ç–µ–ª—å)

        collservers.find_one_and_update(
            {'_id': inter.author.guild.id},
            {
                '$set': {
                    'multiplier': –Ω–æ–≤—ã–π_–º–Ω–æ–∂–∏—Ç–µ–ª—å,
                    'booster_timestamp': int(timestamp),
                    'admin_booster_multiplier': int(–º–Ω–æ–∂–∏—Ç–µ–ª—å)
                }
            }
        )
        collservers.find_one_and_update(
            {'_id': inter.author.guild.id},
            {'$addToSet': {'admin_booster_activated_by': inter.author.id}},
        )

        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å_–≤_—Å—Ç—Ä–æ–∫–µ = self.format_duration(–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)

        # –°–æ–∑–¥–∞–Ω–∏–µ embed —Å–æ–æ–±—â–µ–Ω–∏—è
        embed = disnake.Embed(
            title="–ë—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!",
            description=f"–í—ã —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –∏–≤–µ–Ω—Ç–æ–≤—ã–π –±—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤ ``x{–º–Ω–æ–∂–∏—Ç–µ–ª—å}`` –Ω–∞ **{–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å_–≤_—Å—Ç—Ä–æ–∫–µ}**!\n–ë—É—Å—Ç–µ—Ä –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è <t:{timestamp}:R>.",
            color=0xfa00ff,
            timestamp=datetime.now()
        )
        embed.set_author(name=f"{inter.author.display_name}", icon_url=f"{inter.author.avatar.url}")
        embed.set_thumbnail(url='https://i.imgur.com/vlX2dxG.gif')
        embed.set_footer(text=f'–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∏–≤–µ–Ω—Ç–æ–≤–æ–≥–æ –±—É—Å—Ç–µ—Ä–∞', icon_url=inter.guild.icon.url)
        if –∏–≤–µ–Ω—Ç:
            embed.add_field(name='–ò–≤–µ–Ω—Ç:', value=–∏–≤–µ–Ω—Ç, inline=False)
        embed.add_field(name='', value=f'```–¢–µ–∫—É—â–∏–π –æ–±—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å: x{–Ω–æ–≤—ã–π_–º–Ω–æ–∂–∏—Ç–µ–ª—å}```', inline=False)

        await inter.response.send_message(embed=embed, ephemeral=True)

        channel = await self.bot.fetch_channel(489867322039992323)
        log_embed = disnake.Embed(
            title="–ë—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!",
            description=f"{inter.author.mention} __–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª__ –∏–≤–µ–Ω—Ç–æ–≤—ã–π –±—É—Å—Ç–µ—Ä —Ä—É–º–±–∏–∫–æ–≤ ``x{–º–Ω–æ–∂–∏—Ç–µ–ª—å}`` –Ω–∞ **{–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å_–≤_—Å—Ç—Ä–æ–∫–µ}**!\n–ë—É—Å—Ç–µ—Ä –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è <t:{timestamp}:R>.",
            color=0xfa00ff,
            timestamp=datetime.now()
        )
        log_embed.set_author(name=f"{inter.author.display_name}", icon_url=inter.author.display_avatar.url)
        log_embed.set_thumbnail(url='https://i.imgur.com/vlX2dxG.gif')
        log_embed.set_footer(text=f'–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∏–≤–µ–Ω—Ç–æ–≤–æ–≥–æ –±—É—Å—Ç–µ—Ä–∞', icon_url=inter.guild.icon.url)
        # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ embed
        if –∏–≤–µ–Ω—Ç:
            log_embed.add_field(name='–ò–≤–µ–Ω—Ç:', value=–∏–≤–µ–Ω—Ç, inline=False)
        log_embed.add_field(name='', value=f'```–¢–µ–∫—É—â–∏–π –æ–±—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å: x{–Ω–æ–≤—ã–π_–º–Ω–æ–∂–∏—Ç–µ–ª—å}```', inline=False)

        await channel.send(embed=log_embed)


    @commands.slash_command(name="boosters", description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –±—É—Å—Ç–µ—Ä—ã", contexts=disnake.InteractionContextTypes(guild=True, bot_dm=False, private_channel=False))
    @commands.cooldown(rate=1, per=15, type=commands.BucketType.user)
    async def boosters(self, inter: disnake.ApplicationCommandInteraction):
        server_id = inter.guild_id
        server_data = collservers.find_one({'_id': server_id})

        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—É—Å—Ç–µ—Ä–∞—Ö
        admin_booster_multiplier = server_data.get('admin_booster_multiplier', 0)
        admin_booster_activated_by = server_data.get('admin_booster_activated_by', [])
        booster_timestamp = server_data.get('booster_timestamp', 0)

        global_booster_multiplier = server_data.get('global_booster_multiplier', 0)
        global_booster_activated_by = server_data.get('global_booster_activated_by', [])
        global_booster_timestamp = server_data.get('global_booster_timestamp', 0)

        multiplier = server_data.get('multiplier', 1)


        embed = disnake.Embed(title="–ê–∫—Ç–∏–≤–Ω—ã–µ –±—É—Å—Ç–µ—Ä—ã —Ä—É–º–±–∏–∫–æ–≤ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:", color=0x00ff00)
        embed.set_thumbnail(url='https://i.imgur.com/vlX2dxG.gif')
        embed.set_footer(text=f'–ê–∫—Ç–∏–≤–Ω—ã–µ –±—É—Å—Ç–µ—Ä—ã —Ä—É–º–±–∏–∫–æ–≤', icon_url=inter.guild.icon.url)
        embed.timestamp = datetime.now()

        # –°–µ—Ä–≤–µ—Ä–Ω—ã–π –±—É—Å—Ç–µ—Ä (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏–π)
        if booster_timestamp > int(datetime.now().timestamp()):
            users_admin_booster = ', '.join([f'<@{user_id}>' for user_id in admin_booster_activated_by])
            time_remaining_admin = f"<t:{booster_timestamp}:R>"
            embed.add_field(
                name="–ò–≤–µ–Ω—Ç–æ–≤—ã–π –±—É—Å—Ç–µ—Ä:",
                value=f"**–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª:** {users_admin_booster}\n"
                      f"**–ú–Ω–æ–∂–∏—Ç–µ–ª—å:** ``x{admin_booster_multiplier}``\n"
                      f"**–ò—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑:** {time_remaining_admin}",
                inline=False
            )

        # –ì–ª–æ–±–∞–ª—å–Ω—ã–π –±—É—Å—Ç–µ—Ä
        if global_booster_timestamp > int(datetime.now().timestamp()):
            users_global_booster = ', '.join([f'<@{user_id}>' for user_id in global_booster_activated_by])
            time_remaining_global = f"<t:{global_booster_timestamp}:R>"
            embed.add_field(
                name="–ì–ª–æ–±–∞–ª—å–Ω—ã–π –±—É—Å—Ç–µ—Ä",
                value=f"**–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª:** {users_global_booster}\n"
                      f"**–ú–Ω–æ–∂–∏—Ç–µ–ª—å:** ``x{global_booster_multiplier}``\n"
                      f"**–ò—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑:** {time_remaining_global}",
                inline=False
            )
            embed.add_field(name='', value='')

        # –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±—É—Å—Ç–µ—Ä–æ–≤
        if len(embed.fields) == 0:  # Only the multiplier field exists
            embed.description = "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±—É—Å—Ç–µ—Ä–æ–≤."
            embed.clear_fields()  # Clear the multiplier field if no boosters are active

        # –û–±—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å
        embed.add_field(
            name="",
            value=f"```–¢–µ–∫—É—â–∏–π –æ–±—â–∏–π –º–Ω–æ–∂–∏—Ç–µ–ª—å: x{multiplier}```",
            inline=False
        )

        await inter.response.send_message(embed=embed, ephemeral=True)

    @commands.Cog.listener()
    async def on_modal_submit(self, inter: disnake.ModalInteraction):
        if inter.custom_id == "my_modal":
            nickname = inter.text_values["nickname"]
            await inter.author.edit(nick=nickname)
            await inter.response.send_message('–ù–∏–∫–Ω–µ–π–º —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω.', ephemeral=True)


    @commands.user_command(name='balance')
    @commands.cooldown(rate=1, per=15, type=commands.BucketType.user)
    async def balinuser(self, inter: disnake.ApplicationCommandInteraction, user: disnake.User):
        await self.balance(inter, user)


def setup(bot):
    bot.add_cog(EconomyCog(bot))
    print("EconomyCog is ready")
